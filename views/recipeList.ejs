<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Recipe List</title>

    <link id="dynamicStylesheet" rel="stylesheet" type="text/css" href="/thumbs.css"> <!-- Default to thumbs initially -->
    <link rel="stylesheet" type="text/css" href="/main.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Abril+Fatface&family=Fraunces:ital,opsz,wght@0,9..144,100..900;1,9..144,100..900&family=Merriweather:ital,opsz,wght@0,18..144,300..900;1,18..144,300..900&family=Playfair+Display:ital,wght@0,400..900;1,400..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Quicksand:wght@300..700&family=Source+Serif+4:ital,opsz,wght@0,8..60,200..900;1,8..60,200..900&display=swap" rel="stylesheet">
    <script>
      // Inline script to prevent FOUC for stylesheet
      (function() {
        const storageKey = 'recipeViewStyle';
        const savedStyle = localStorage.getItem(storageKey) || 'thumbs'; // Default to thumbs
        const stylesheet = document.getElementById('dynamicStylesheet');
        if (stylesheet) {
          stylesheet.href = savedStyle === 'thumbs' ? '/thumbs.css' : '/recipeList.css';
        }
      })();
    </script>
    <style>
        /* You can place the essential CSS directly here or ensure it's in thumbs.css/main.css */
        img.recipeImg {
            opacity: 0; /* Start invisible */
            transition: opacity 0.15s ease-in-out; /* Adjust timing */
            /* Ensure other styles like object-fit, width, height are set */
        }
        img.recipeImg.loaded {
            opacity: 1; /* Fade in */
        }
        img.recipeImg.error {
             opacity: 1; /* Make errors visible */
             /* Add alternative styling if needed */
        }
    </style>
</head>
<body>

    <%- include('partials/header');%>
    <div class="contentWrapper">
    <div class="content">
        <h1><%if (favourites === true){%>
                Favourites
            <%} else {%>
                Recipes
            <%}%>
        </h1>
        <div class="toggle row">
            <button id="toggleStylesheet">
                <img src="/imgs/thumb3.svg" height="20px" width="20px" alt="Thumbnail view icon">
                <img src="/imgs/slash.svg" height="20px" width="20px" alt="Slash icon">
                <img src="/imgs/list.svg" height="20px" width="20px" alt="List view icon">
            </button>
        </div>

        <!--Recipe List-->
        <ul>
            <% for(var i=0; i < recipeList.length; i++){%>
                <div class="contentRow">
                    <li>
                        <% if (recipeList[i].isLink){%>
                        <a href="<%=recipeList[i].recipeUrl%>"><%=recipeList[i].title%></a>
                        <%} else {%>
                        <a href="<%if (recipeList[i].isImg){%>/recipeImg/<%} else {%>/recipe/<%}%><%=recipeList[i].title%>"><%=recipeList[i].title%></a>
                        <%}%>
                    </li>

                    <%# --- Image Section with onload --- %>
                    <% if (recipeList[i].isImg){%>
                        <a href="/recipeImg/<%=recipeList[i].title%>">
                            <img class="recipeImg"
                                 src="/recipeImg/imgThumbURL/<%=recipeList[i].title%>"
                                 style="object-fit: cover;"
                                 alt="<%= recipeList[i].title %>"
                                 onload="this.classList.add('loaded')"
                                 onerror="this.classList.add('error')">
                        </a>
                    <%} else if (recipeList[i].images == undefined && recipeList[i].isLink){%>
                        <a href="<%=recipeList[i].recipeUrl%>">
                            <img class="recipeImg"
                                 src="../imgs/placeholder.jpg"
                                 alt="Placeholder"
                                 onload="this.classList.add('loaded')"
                                 onerror="this.classList.add('error')">
                        </a>
                    <%} else if (recipeList[i].images == undefined && !recipeList[i].isLink){%>
                        <a href="/recipe/<%=recipeList[i].title%>">
                            <img class="recipeImg"
                                 src="../imgs/placeholder.jpg"
                                 alt="Placeholder"
                                 onload="this.classList.add('loaded')"
                                 onerror="this.classList.add('error')">
                        </a>
                    <%} else {%>
                        <a href="/recipe/<%=recipeList[i].title%>">
                            <img class="recipeImg"
                                 src="/recipeImg/imgThumbURL/<%=recipeList[i].title%>"
                                 style="object-fit: cover;"
                                 alt="<%= recipeList[i].title %>"
                                 onload="this.classList.add('loaded')"
                                 onerror="this.classList.add('error')">
                        </a>
                    <%}%>
                    <%# --- End Image Section --- %>


                    <div class="buttons row">
                        <form class="col deleteRecipe" action='/deleteRecipe' method='post'>
                            <input type="hidden" name="title" value="<%=recipeList[i].title%>">
                            <button type="button" class="deleteBtn"><img src="/imgs/trash-2.svg" alt="Delete"></button>
                        </form>
                        <button class="editBtn"><a href="/recipe/<%=recipeList[i].title%>/editRecipe"><img src="/imgs/edit.svg" alt="Edit"></a></button>
                        <form class="col favouriteRecipe" action='/favouriteRecipe' method='post'>
                            <input type="hidden" name="title" value="<%=recipeList[i].title%>">
                            <button type="button" class="favouriteBtn"><img src="/imgs/<%if (recipeList[i].isCurrentUserFavourite === true){%>heart-f-filled-red.png<%} else {%>heart-f-filled.png<%}%>" alt="Favourite"></button>
                        </form>
                        <%if (!recipeList[i].isImg && !recipeList[i].isLink){%>
                        <form class="col shoppingList" action='/shoppingList' method='post'>
                            <input type="hidden" name="title" value="<%=recipeList[i].title%>">
                            <button type="button" class="shoppingListBtn"><img src="/imgs/<%if (recipeList[i].onList === true){%>basketChecked.svg<%} else {%>basket.svg<%}%>" alt="Add to shopping list"></button>
                        </form>
                        <%}%>
                    </div>
                </div>
            <%}%>
        </ul>

        <%# --- Pagination (Unchanged) --- %>
        <% if (totalPages > 1) { %>
            <div class="pagination">
                <% let paginationBaseUrl = `${currentPath}?limit=${limit}`; %>
                <% if (typeof searchTerm !== 'undefined' && searchTerm) { %>
                    <% paginationBaseUrl += `&search=${encodeURIComponent(searchTerm)}`; %>
                <% } %>
                <% if (Number(currentPage) > 1) { %><a href="<%= paginationBaseUrl %>&page=<%= Number(currentPage) - 1 %>">«</a><% } %>
                <% const currentNum = Number(currentPage); %><% const totalNum = Number(totalPages); %>
                <% if (currentNum === 1) { %><span class="current">1</span><% } else { %><a href="<%= paginationBaseUrl %>&page=1">1</a><% } %>
                <% if (currentNum > 3) { %><% const prevEllipsisPage = Math.max(1, currentNum - 3); %><a href="<%= paginationBaseUrl %>&page=<%= prevEllipsisPage %>" class="ellipsis">...</a><% } %>
                <% if (currentNum > 2) { %><a href="<%= paginationBaseUrl %>&page=<%= currentNum - 1 %>"><%= currentNum - 1 %></a><% } %>
                <% if (currentNum !== 1 && currentNum !== totalNum) { %><span class="current"><%= currentNum %></span><% } %>
                <% if (currentNum < totalNum - 1) { %><a href="<%= paginationBaseUrl %>&page=<%= currentNum + 1 %>"><%= currentNum + 1 %></a><% } %>
                <% if (currentNum < totalNum - 2) { %><% const nextEllipsisPage = Math.min(totalNum, currentNum + 3); %><a href="<%= paginationBaseUrl %>&page=<%= nextEllipsisPage %>" class="ellipsis">...</a><% } %>
                <% if (totalNum > 1) { %><% if (currentNum === totalNum) { %><span class="current"><%= totalNum %></span><% } else { %><a href="<%= paginationBaseUrl %>&page=<%= totalNum %>"><%= totalNum %></a><% } %><% } %>
                <% if (currentNum < totalNum) { %><a class="next" href="<%= paginationBaseUrl %>&page=<%= Number(currentPage) + 1 %>">»</a><% } %>
            </div>
        <% } %>
        <%# --- End Pagination --- %>

    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        console.log("DOM ready - Simplified Script");

        // --- Selectors for Buttons ---
        const toggleButton = document.getElementById('toggleStylesheet');
        const dynamicStylesheet = document.getElementById('dynamicStylesheet');
        const storageKey = 'recipeViewStyle';
        const deleteBtns = document.querySelectorAll(".deleteBtn");
        const deleteForm = document.querySelectorAll(".deleteRecipe");
        const favouriteForms = document.querySelectorAll(".favouriteRecipe");
        const shoppingForms = document.querySelectorAll(".shoppingList");

        // --- Stylesheet Toggle Logic ---
        function applyAndSaveStyle(style) {
            const isThumbs = style === 'thumbs';
            if (!dynamicStylesheet) {
                 console.error("Dynamic stylesheet element not found!"); return;
            }
            dynamicStylesheet.href = isThumbs ? '/thumbs.css' : '/recipeList.css';

            // Apply display style directly - This is still needed for the toggle
            const currentRecipeImages = document.querySelectorAll(".recipeImg");
             currentRecipeImages.forEach((recipe) => {
                 // Make sure images are visible when thumbs view is active
                 recipe.style.display = isThumbs ? 'block' : 'none';
             });

            localStorage.setItem(storageKey, style);
            console.log(`Applied style: ${style}. Image display set to: ${isThumbs ? 'block' : 'none'}`);
        }

        function toggleStyles() {
            const currentStyle = localStorage.getItem(storageKey) || 'thumbs';
            const newStyle = currentStyle === 'thumbs' ? 'list' : 'thumbs';
            console.log(`Toggling style from ${currentStyle} to ${newStyle}`);
            applyAndSaveStyle(newStyle);
        }

        // Apply initial style on load (needed for the toggle)
        const initialStyle = localStorage.getItem(storageKey) || 'thumbs';
        // Check if applyAndSaveStyle needs to be called before applying display
        // Or just apply the display part directly based on initialStyle
         const initialIsThumbs = initialStyle === 'thumbs';
         document.querySelectorAll(".recipeImg").forEach(img => {
             img.style.display = initialIsThumbs ? 'block' : 'none';
         });
        console.log(`Initial style set based on localStorage: ${initialStyle}`);


        // Add listener to the toggle button
        if (toggleButton) {
            toggleButton.addEventListener('click', toggleStyles);
        } else {
             console.error("Toggle stylesheet button not found!");
        }

        // --- Button Handlers (Delete, Favourite, Shopping List) ---

        // Shopping list form using fetch
        shoppingForms.forEach((form) => {
            const shoppingListButton = form.querySelector(".shoppingListBtn");
            if (!shoppingListButton) return;
            async function handleShoppingListClick(event) {
                event.preventDefault(); let data = {}; new FormData(form).forEach((v, k) => { data[k] = v });
                const icon = shoppingListButton.querySelector('img'); let originalSrc = '';
                if (icon) { originalSrc = icon.getAttribute('src'); icon.setAttribute('src', originalSrc.includes('basket.svg') ? '/imgs/basketChecked.svg' : '/imgs/basket.svg'); }
                try { await fetch('/shoppingList', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(data) }); }
                catch (error) { console.error('Error sending SL data:', error); if (icon && originalSrc) icon.setAttribute('src', originalSrc); }
            }
            shoppingListButton.addEventListener("click", handleShoppingListClick);
        });

        // Favourite form using fetch
        favouriteForms.forEach((form) => {
            const favouriteButton = form.querySelector(".favouriteBtn");
            if (!favouriteButton) return;
            async function handleFavouriteClick(event) {
                event.preventDefault(); let data = {}; new FormData(form).forEach((v, k) => { data[k] = v });
                const icon = favouriteButton.querySelector('img'); let originalSrc = '';
                if (icon) { originalSrc = icon.getAttribute('src'); icon.setAttribute('src', originalSrc.includes('heart-f-filled-red') ? '/imgs/heart-f-filled.png' : '/imgs/heart-f-filled-red.png'); }
                try { await fetch('/favouriteRecipe', { method: 'POST', headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(data) }); }
                catch (error) { console.error('Error sending Fav data:', error); if (icon && originalSrc) icon.setAttribute('src', originalSrc); }
            }
            favouriteButton.addEventListener("click", handleFavouriteClick);
        });

        // Delete confirmation
        deleteBtns.forEach((button, index) => {
            button.addEventListener("click", function() {
                if (deleteForm && deleteForm[index]) {
                    const response = confirm("Are you sure you want to delete this recipe?");
                    if (response === true) deleteForm[index].submit();
                } else { console.error(`Delete button no form index ${index}`); }
            });
        });

    }); // End DOMContentLoaded
</script>


</body>
</html>