<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>New Recipe</title>
    <link rel="stylesheet" type="text/css" href="styles.css">
</head>
<body>
    <%- include('partials/header') %>

    <!---->
    <div class="newRecipeWrapper">
        <h1>New Recipe</h1>

         <!--Recipe Form-->
         <% if (recipeExists === true) {%>A recipe with that title already exists. Please try a new one.<%}%>
        <form class="col" id='submitRecipe' action='/newRecipe' method='post'>

            <div class="Title row">
                <h2>Title</h2>
                <input type='text' name='title' required pattern="[^{}<>]{2,50}"></input>
            </div>

            <h2>Image URL</h2>
            <input type='text' name='image' pattern="(http(s?):)([/|.|\w|\s|-])*\.(?:jpg|gif|png|webp|bmp|jpeg){0,500}" required></input>

            <h2>Description</h2>
            <input type='text' name='description' required pattern="[^{}<>]{2,500}"></input>

            <div class="Ingredients row">
                <h2>Ingredients</h2>
                <button type="button" id="addIngredient">+</button>
            </div>

            <div class="ingredientsList">
            </div>
            
            <div class="Steps row">
                <h2>Steps</h2>
                <button type="button" id="addStep">+</button>
            </div>

            <div class="stepsList">
            </div>
            <button type='submit' class='submitBtn'>SUBMIT</button>

        </form>
    </div>

    <script>

        //Assign button for adding steps, and step area for appending steps.
        let stepAddButton = document.getElementById("addStep");
        let stepsArea = document.querySelector(".stepsList")

        //Amount of steps starts at 0, increases with added steps, helps us name the steps ids and names
        let stepNumber = 0;

        /*When the button is clicked, add one to the step counter.
          Then create a div, h3, and text input. Assign the "text" type to the input.
          Assign a name to the input using the step counter, eg. 'Step1, Step2, Step3'.
          Append the h3, and text input to the div. This is a full step node. Append it to the step area.*/
        stepAddButton.addEventListener("click", function(){

            stepNumber += 1;

            //define elements for a step node
            let div = document.createElement("div");
            let h3 = document.createElement("h3");
            let textInput = document.createElement("input");
            let deleteButton = document.createElement("button");

            //Add names, ids, and text-content to nodes
            h3.textContent = `Step ${stepNumber}`;
            div.id = `stepDiv${stepNumber}`;
            div.classList.add("stepNode");
            textInput.name = `step${stepNumber}`;
            textInput.type = "text";
            textInput.required = true;
            textInput.pattern = "[^{}<>]{2,300}";
            deleteButton.id = `stepBtn${stepNumber}`;
            deleteButton.textContent = "X";
            deleteButton.type = "button";

      
            //append nodes together and then append to the step area
            div.append(h3);
            div.append(textInput);
            div.append(deleteButton);
            stepsArea.append(div);

            //Initialize variables for the new fully appended step node and corresponding delete button
            let thisStepNode = document.querySelector(`#stepDiv${stepNumber}`)
            let thisNodeDeleteBtn = document.querySelector(`#stepBtn${stepNumber}`)

            //add event listener to this nodes delete button which will delete this node
            thisNodeDeleteBtn.addEventListener("click", function(){
                thisStepNode.remove()

                //rename all step numbers so that they are in order
                let allSteps = document.querySelectorAll(".stepNode");

                /*We create an array of all step nodes, and iterate through their H3s through the "children"
                property. Div, and button ID's remain unchanged because they are only visible to the back end.
                So "Step 2" may still have the div and button ID "step 5", but it does not matter, this keeps
                delete buttons corresponding to the nodes and they will get added in the correct order to an 
                array in the database entry after server-side anyways*/
                for (i=0; i < allSteps.length; i++){
                    allSteps[i].children[0].textContent = `Step ${i+1}`
                    allSteps[i].children[0].textContent = `Step ${i+1}`
                }
                
                
            })

        })

        //Repeat logic for ingredients list
        let ingredientAddButton = document.getElementById("addIngredient");
        let ingredientsArea = document.querySelector(".ingredientsList")
        let ingredientNumber = 0;

        ingredientAddButton.addEventListener("click", function(){

            ingredientNumber += 1;
            let div = document.createElement("div");
            let h3 = document.createElement("h3");
            let textInput = document.createElement("input");
            let deleteButton = document.createElement("button");

            h3.textContent = `${ingredientNumber}`;
            div.classList.add("row");
            div.classList.add("ingredientNode");
            div.id = `ingredientDiv${ingredientNumber}`;
            textInput.name = `ingredient${ingredientNumber}`;
            textInput.type = "text";
            textInput.required = true;
            textInput.pattern = "[^{}<>]{2,70}";
            deleteButton.id = `ingredientBtn${ingredientNumber}`;
            deleteButton.textContent = "X";

            div.append(h3);
            div.append(textInput);
            div.append(deleteButton);
            ingredientsArea.append(div);

            let thisIngredientNode = document.querySelector(`#ingredientDiv${ingredientNumber}`)
            let thisIngredientDeleteBtn = document.querySelector(`#ingredientBtn${ingredientNumber}`)

            thisIngredientDeleteBtn.addEventListener("click", function(){
                thisIngredientNode.remove()
                let allIngredients = document.querySelectorAll(".ingredientNode");
                for (i=0; i < allIngredients.length; i++){
                    allIngredients[i].children[0].textContent = `${i+1}`
                    allIngredients[i].children[0].textContent = `${i+1}`
                }
            })

        })
    </script>
</body>
</html>