<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>New Recipe</title>
    <link rel="stylesheet" type="text/css" href="/styles.css">
</head>
<body>
    <%- include('partials/header') %>

    <!---->
    <div class="newRecipeWrapper">
        <h1>Edit Recipe</h1>

         <!--Recipe Form-->
         <% if (recipeExists === true) {%>A recipe with that title already exists. Please try a new one.<%}%>
        <form class="col" id='submitRecipe' action='/newRecipe' method='post'>

            <div class="Title row">
                <h2>Title</h2>
                <input type='text' name='title' required pattern="[^{}<>]{2,50}" value="<%=recipe[0].title%>"></input>
            </div>

            <h3>Favourite</h3><input type="checkbox" name="favourite"></input>
            <h2>Description</h2>
            <input type='text' name='description' required pattern="[^{}<>]{2,500}" value="<%=recipe[0].description%>"></input>

            <h2>Image URL</h2>
            <input type='text' name='image' pattern="(http(s?):)([/|.|\w|\s|-])*\.(?:jpg|gif|png|webp|bmp|jpeg){0,500}" value="<%=recipe[0].imageUrl%>"required></input>

            <div class="Ingredients row">
                <h2>Ingredients</h2>
                <button type="button" id="addIngredient">+</button>
            </div>

            <div class="ingredientsList">
                <%for (i = 0; i < recipe[0].ingredients.length; i++){%>
                    <div class="row ingredientNode" id="ingredientDiv<%=i+1%>">
                        <h3><%=i+1%></h3>
                        <input name="ingredient<%=i+1%>" type="text" required="" pattern="[^{}<>]{2,70}" value="<%=recipe[0].ingredients[i]%>">
                        <button id="ingredientBtn<%=i+1%>">X</button>
                    </div>
                    <%}%>
            </div>
            
            <div class="Steps row">
                <h2>Steps</h2>
                <button type="button" id="addStep">+</button>
            </div>

            <div class="stepsList">
                <%for (i = 0; i < recipe[0].steps.length; i++){%>
                    <div class="stepNode" id="stepDiv<%=i+1%>">
                        <h3>Step <%=i+1%></h3>
                        <input name="step<%=i+1%>" type="text" required="" pattern="[^{}<>]{2,70}" value="<%=recipe[0].steps[i]%>">
                        <button id="stepBtn<%=i+1%>" type="button">X</button>
                    </div>
                <%}%>
            </div>
            <button type='button' class='submitBtn'>SUBMIT</button>

        </form>
    </div>

    <script>

        //Assign button for adding steps, and step area for appending steps.
        let stepAddButton = document.getElementById("addStep");
        let stepsArea = document.querySelector(".stepsList")
        let steps = [];
        let stepNumber;

        //Assign function to recount steps, assign step number, change values
        let setStepNumber = () => {
            steps = document.querySelectorAll(".stepNode");
            if (steps[0] === undefined){
                stepNumber = 0;
            } else {
                stepNumber = steps.length;
            }
        }

        //Assign function to assign delete buttons
        let initDeleteStepButtons = () => {
            for (i = 1; i < steps.length + 1; i++){
                let thisStepNode = document.querySelector(`#stepDiv${i}`)
                let thisNodeDeleteBtn = document.querySelector(`#stepBtn${i}`)
                //add event listener to this nodes delete button which will delete this node
                thisNodeDeleteBtn.addEventListener("click", function(){
                    thisStepNode.remove();
                    setStepNumber();
                    resetSteps(); 
                })
            }
        }

        //Assign function to create new step node
        let createStep = () => {
            stepNumber += 1;
             //define elements for a step node
            let div = document.createElement("div");
            let h3 = document.createElement("h3");
            let textInput = document.createElement("input");
            let deleteButton = document.createElement("button");
            //Add names, ids, and text-content to nodes
            h3.textContent = `Step ${stepNumber}`;
            div.id = `stepDiv${stepNumber}`;
            div.classList.add("stepNode");
            textInput.name = `step${stepNumber}`;
            textInput.type = "text";
            textInput.required = true;
            textInput.pattern = "[^{}<>]{2,300}";
            deleteButton.id = `stepBtn${stepNumber}`;
            deleteButton.textContent = "X";
            deleteButton.type = "button";
            //append nodes together and then append to the step area
            div.append(h3);
            div.append(textInput);
            div.append(deleteButton);
            stepsArea.append(div);
            setStepNumber();
        }

        let resetSteps = () => {
            for (i=0; i < steps.length; i++){
                    steps[i].id = `stepDiv${i+1}`;
                    steps[i].children[1].name = `step${i+1}`
                    steps[i].children[0].textContent = `Step ${i+1}`
                    steps[i].children[0].textContent = `Step ${i+1}`
                    steps[i].children[2].id = `stepBtn${i+1}`
            }
        }





        setStepNumber();
        initDeleteStepButtons();
    
        stepAddButton.addEventListener("click", function(){
            setStepNumber();
            createStep();
            initDeleteStepButtons();
        })



        //Repeat logic for ingredients list
        let ingredientAddButton = document.getElementById("addIngredient");
        let ingredientsArea = document.querySelector(".ingredientsList")
        let ingredientNumber = 0;

        ingredientAddButton.addEventListener("click", function(){

            ingredientNumber += 1;
            let div = document.createElement("div");
            let h3 = document.createElement("h3");
            let textInput = document.createElement("input");
            let deleteButton = document.createElement("button");

            h3.textContent = `${ingredientNumber}`;
            div.classList.add("row");
            div.classList.add("ingredientNode");
            div.id = `ingredientDiv${ingredientNumber}`;
            textInput.name = `ingredient${ingredientNumber}`;
            textInput.type = "text";
            textInput.required = true;
            textInput.pattern = "[^{}<>]{2,70}";
            deleteButton.id = `ingredientBtn${ingredientNumber}`;
            deleteButton.textContent = "X";

            div.append(h3);
            div.append(textInput);
            div.append(deleteButton);
            ingredientsArea.append(div);

            let thisIngredientNode = document.querySelector(`#ingredientDiv${ingredientNumber}`)
            let thisIngredientDeleteBtn = document.querySelector(`#ingredientBtn${ingredientNumber}`)

            thisIngredientDeleteBtn.addEventListener("click", function(){
                thisIngredientNode.remove()
                let allIngredients = document.querySelectorAll(".ingredientNode");
                for (i=0; i < allIngredients.length; i++){
                    allIngredients[i].children[0].textContent = `${i+1}`
                    allIngredients[i].children[0].textContent = `${i+1}`
                }
            })

        })

        //Manual validation checks before submit
        let submitBtn = document.querySelector(".submitBtn");
        let submitRecipeForm = document.querySelector("#submitRecipe");

        //Checks to make sure every input is filled and that there is atleast one ingredient and one step before submitting. Error messages not handled.
        submitBtn.addEventListener("click", function(){
            let inputs = document.querySelectorAll("input");
            let inputsFilled = true;
            let inputsValid = true;

            for (i = 0; i < inputs.length; i++){
                if (inputs[i].validity.valueMissing === true){
                    inputsFilled = false;
                    console.log("input missing");
                }
                if (inputs[i].validity.patternMismatch === true){
                    inputsValid = false;
                    console.log("pattern mismatch");
                }
            }

            if (document.querySelectorAll(".ingredientNode")[0] !== undefined && document.querySelectorAll(".stepNode")[0] !== undefined && inputsFilled === true && inputsValid === true){
                submitRecipeForm.submit();
            };
        })

    </script>
</body>
</html>