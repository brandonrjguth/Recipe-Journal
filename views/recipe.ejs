<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="/main.css">
    <link rel="stylesheet" type="text/css" href="/recipe.css">
    <title>Recipe List</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link href="https://fonts.googleapis.com/css2?family=Abril+Fatface&family=Fraunces:ital,opsz,wght@0,9..144,100..900;1,9..144,100..900&family=Merriweather:ital,opsz,wght@0,18..144,300..900;1,18..144,300..900&family=Playfair+Display:ital,wght@0,400..900;1,400..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Quicksand:wght@300..700&family=Source+Serif+4:ital,opsz,wght@0,8..60,200..900;1,8..60,200..900&display=swap" rel="stylesheet">
</head>
<body>
    <%- include('partials/header')%>
    <!--Display title, whether favourited or not, description, list of ingredients, and list of steps
    for the selected recipt-->

    <div class="content">
        <div class="heroImage" style="background-image:url('/recipeImg/imgHeroURL/<%=recipe.title%>')">
        </div>
        <div class="recipeHeroWrapper" >
            <div class="recipeHero">
                <div class="recipeHeroInner">
                    <h1 class="title"><%=recipe.title%></h1>
                    <div class="buttons row">
                        <form class="col" id='favouriteRecipe' action='/favouriteRecipe' method='post'>
                            <input type="hidden" name="title" value="<%=recipe.title%>"></input>
                            <button aria-label="set as favourite" id="favouriteButton"><img alt="small heart icon" src="/imgs/<%if (recipe.isCurrentUserFavourite === true){%>heart-f-filled-red.png<%} else {%>heart-f-filled.png<%}%>"></button> <%# Updated condition %>
                        </form>
                            <a href="/recipe/<%=recipe.title%>/editRecipe"><img alt="notepad being written on with a pencil" src="/imgs/edit.svg"></a>
                        <% if (!recipe.isImg && !recipe.isLink) { %> <%# Check if recipe is not an image or link %>
                            <form class="col shoppingList" action='/shoppingList' method='post'>
                                <input type="hidden" name="title" value="<%=recipe.title%>">
                                <button aria-label="add to shopping list" type="button" class="shoppingListBtn"><img alt="shopping basket" src="/imgs/<%if (recipe.isOnCurrentUserList === true){%>cart2-filled-smooth.svg<%} else {%>cart2-smooth.svg<%}%>" alt="Add to shopping list"></button> <%# Updated condition and image names %>
                            </form>
                        <% } %>
                        <form class="col" id='deleteRecipe' action='/deleteRecipe' method='post'>
                            <input type="hidden" name="title" value="<%=recipe.title%>"></input>
                            <button aria-label="delete recipe" type="button" id="deleteBtn"><img alt="trash can" src="/imgs/trash-2.svg"></button>
                        </form>

                    </div>
                    <div class="tags">
                        <div class="tagWrapper">
                            <%if (recipe.categories){
                                recipe.categories.forEach((category) => {%>
                                    <p class="tag"><%=category%></p>
                                <%})
                            }%>
                        </div>
                    </div>
                    <div class="description">
                        <p><%=recipe.description%></p>
                    </div>
                </div>
            </div>
        </div>

        <div class="recipeInstructionsWrapper">
            <div class="recipeInstructions">
                <div class="ingredients">
                <div class="ingredientsTitle">
                <h3>Ingredients</h3>
                </div>
                    <ul>
                        <% for (let i=0; i < recipe.ingredients.length; i++){%>
                            <li><%=recipe.ingredients[i]%></li>
                        <%}%> 
                    </ul>
                </div>
                <div class="steps">
                    <h3>Steps</h3>
                    <ol>
                        <% for (let i=0; i < recipe.steps.length; i++){%>
                            <li><%=recipe.steps[i]%></li>
                        <%}%> 
                    </ol>
                </div>
            </div>
        </div>

    </div>

    <script>
        
        let favouriteButton = document.querySelector("#favouriteButton")
        let favouriteForm = document.querySelector("#favouriteRecipe")

        // Get the form data
        // Create a separate function to handle the button click
        async function handleFavouriteClick(event) {
            
            event.preventDefault();
            console.log("clicked");
            let data = {};
            let formData = new FormData(favouriteForm);
            formData.forEach((value, key) => {data[key] = value});

            // Toggle the heart icon
            let heartIcon = favouriteButton.querySelector('img');
            let currentSrc = heartIcon.getAttribute('src');
            let newSrc = currentSrc.includes('heart-f-filled-red') ? '/imgs/heart-f-filled.png' : '/imgs/heart-f-filled-red.png';
            heartIcon.setAttribute('src', newSrc);

            try {
                // Send the form data asynchronously using Fetch API
                await fetch('/favouriteRecipe', {
                    method: 'POST',
                    headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data),
                });
                // Form data sent successfully (no need to wait for a response)
            } catch (error) {
                console.error('Error sending form data:', error);
            }
        }

        // Add event listener to the button
        favouriteButton.addEventListener("click", handleFavouriteClick);
        




        /*Make delete button send a post request with the recipeURL which will delete current recipe and 
        redirect to the recipe list*/
        let deleteBtn = document.querySelector("#deleteBtn");
        let deleteForm = document.querySelector("#deleteRecipe")

        deleteBtn.addEventListener("click", function(){

            //Make user confirm recipe deletion before submitting the form
            const response = confirm("Are you sure you want to delete this recipe?")
            if (response === true){
                deleteForm.submit();
            }
        })

        // --- Shopping List Button Handler ---
        const shoppingListForm = document.querySelector(".shoppingList"); // Select the single form
        const shoppingListButton = document.querySelector(".shoppingListBtn"); // Select the single button

        if (shoppingListForm && shoppingListButton) { // Check if the elements exist (in case the button isn't rendered)
            async function handleShoppingListClick(event) {
                event.preventDefault();
                let data = {};
                new FormData(shoppingListForm).forEach((v, k) => { data[k] = v }); // Use the specific form

                const icon = shoppingListButton.querySelector('img');
                let originalSrc = '';
                if (icon) {
                    originalSrc = icon.getAttribute('src');
                    // Toggle icon based on current state using the correct filenames
                    icon.setAttribute('src', originalSrc.includes('cart2-smooth.svg') ? '/imgs/cart2-filled-smooth.svg' : '/imgs/cart2-smooth.svg');
                }

                try {
                    await fetch('/shoppingList', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(data)
                    });
                    // Optionally update recipe.onList state here if needed for immediate UI feedback without page reload
                } catch (error) {
                    console.error('Error sending shopping list data:', error);
                    // Revert icon if fetch fails
                    if (icon && originalSrc) {
                        icon.setAttribute('src', originalSrc);
                    }
                }
            }
            shoppingListButton.addEventListener("click", handleShoppingListClick);
        }
    </script>

</body>
</html>
